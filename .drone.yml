kind: pipeline
type: docker
name: 服务构建

volumes:
  - name: maven-cache
    host:
      path: /volume2/docker/drone/server-01/drone-runner-docker/maven-cache
  - name: run-script
    host:
      path: /volume2/docker/drone/server-01/drone-runner-docker/apps/java/run-script
  - name: node-run-script
    host:
      path: /volume2/docker/drone/server-01/drone-runner-docker/apps/node/build-dist
  - name: node-cache
    host:
      path: /volume2/docker/drone/server-01/drone-runner-docker/node-cache/yarn/3.5.1
steps:
  - name: 后端构建
    image: maven:3.8.5-openjdk-17
    pull: if-not-exists
    volumes:
      - name: maven-cache
        path: /root/.m2
      - name: run-script
        path: /app/build
    commands:
      - pwd
      - ls -al
      - cd ./app/server
      - mvn clean compile
      - chmod +x build.sh
      - ./build.sh -DskipTests
      - pwd
      - mkdir -p /app/build/${DRONE_REPO_NAME} && rm -rf /app/build/${DRONE_REPO_NAME}/*
      - mkdir -p /app/build/${DRONE_REPO_NAME} && cp -Rf ./dist /app/build/${DRONE_REPO_NAME}
      - mkdir -p /app/build/${DRONE_REPO_NAME} && cp -Rf ./scripts /app/build/${DRONE_REPO_NAME}
      - mkdir -p /app/build/${DRONE_REPO_NAME} && cp -Rf ./.env /app/build/${DRONE_REPO_NAME}/.env;
  - name: 前端构建
    image: node:18
    pull: if-not-exists
    volumes:
      - name: node-run-script
        path: /app/node/build
      - name: node-cache
        path: /app/node/cache/.yarn/cache
    commands:
      - pwd
      - ls -al
      - cd ./app/client
      - rm -rf dist
      - yarn install
      - yarn build
      - mkdir -p /app/node/build/${DRONE_REPO_NAME} && rm -rf /app/node/build/${DRONE_REPO_NAME}/*
      - mkdir -p /app/node/build/${DRONE_REPO_NAME} && cp -Rf ./dist /app/node/build/${DRONE_REPO_NAME}/
  - name: 清空历史文件
    image: appleboy/drone-ssh
    pull: if-not-exists
    settings:
      host:
        from_secret: ssh_ip
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_pw
      port: 22
      command_timeout: 2m
      script:
        - cd /www/wwwroot/pageplug/
        - pwd
        - mkdir -p server
        - mkdir -p client
        - rm -rf ./server/*
        - rm -rf ./client/*
trigger:
  branch:
    - main
---
kind: pipeline
type: docker
name: 部署项目
clone:
  disable: true
steps:
  - name: 拷贝项目文件
    image: appleboy/drone-ssh
    pull: if-not-exists
    environment:
      S_USER:
        from_secret: ssh_user
      S_IP:
        from_secret: ssh_ip
      N_PATH: /volume2/docker/drone/server-01/drone-runner-docker/apps/java/run-script
      N_NODE_PATH: /volume2/docker/drone/server-01/drone-runner-docker/apps/node/run-script
    settings:
      host:
        from_secret: n_ip
      username:
        from_secret: n_user
      password:
        from_secret: n_pw
      port: 22
      command_timeout: 2m
      envs:
        - s_user
        - s_ip
        - n_path
      script:
        - cd $N_PATH/pageplug/
        - pwd
        - scp -r ./*  $S_USER@$S_IP:/www/wwwroot/pageplug/server/
        - cd $N_NODE_PATH/pageplug/
        - pwd
        - scp -r ./*  $S_USER@$S_IP:/www/wwwroot/pageplug/client/
  - name: 开始部署
    image: appleboy/drone-ssh
    pull: if-not-exists
    settings:
      host:
        from_secret: ssh_ip
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_pw
      port: 22
      command_timeout: 2m
      script:
        - cd /www/wwwroot/pageplug/server/
        - chmod +x ./scripts/start-dev-server.sh
        - ./scripts/start-dev-server.sh
depends_on:
  - 服务构建
